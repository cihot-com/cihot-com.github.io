class StyleRoot{static init(){0===document.styleSheets.length&&document.head.appendChild(document.createElement("style"))}static get(t,e=":root"){StyleRoot.init();let r=null;return Array.prototype.forEach.call(document.styleSheets,(l,o)=>{Array.prototype.forEach.call(l.rules,l=>{l.selectorText===e&&(r=l.styleMap.get(t))})}),r?String(r).trim():r}static set(t,e="",r=":root"){let l,o;return StyleRoot.init(),Array.prototype.forEach.call(document.styleSheets,(t,e)=>{l=t,Array.prototype.forEach.call(t.rules,t=>{t.selectorText===r&&(o=t)})}),o||(l.addRule(r,`${t}:${e};`,l.rules.length),o=l.rules[l.rules.length-1]),o.styleMap.set(t,e),e}static getValue(t,e=":root"){return StyleRoot.get(StyleRoot.normalizeKey(t),e)}static setValue(t,e="",r=":root"){return t=StyleRoot.normalizeKey(t),e=StyleRoot.normalizeValue(e),StyleRoot.set(t,e,r)}static style(t,e,r,l=!1){return l&&(r+="!important"),t.style.setProperty(e,r)}static styleValue(t,e,r,l=!1){return e=StyleRoot.normalizeKey(e),r=StyleRoot.normalizeValue(r),l&&(r+="!important"),t.style.setProperty(e,r)}static normalizeKey(t){return t=String(t).trim(),/^--\S/.test(t)||(t="--"+t),t}static normalizeValue(t){return String(t).trim()}}